@model Review

@{
    ViewData["Title"] = "Add New Review";
}

@{
    string email = Context.Session.GetString("UserEmail");
}

<h2>Add New Review</h2>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ParfumeId" class="control-label"></label>
                @Html.DropDownList("ParfumeId", ViewData["ParfumeId"] as List<SelectListItem>, "Select a parfume", new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label asp-for="UserId" class="control-label"></label>
                <input asp-for="UserId" class="form-control" value="@email" readonly></input>
                <input asp-for="UserId" type="hidden" />
            </div>
            <div class="form-group">
                <label asp-for="Comment" class="control-label"></label>
                <input asp-for="Comment" class="form-control" />
                <span asp-validation-for="Comment" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Rating" class="control-label"></label>
                <input asp-for="Rating" class="form-control-range" type="range" min="1" max="10" step="1" oninput="updateSliderValue(this.value)" />
                <output style="font-size:1.5em" id="rating-value">5</output> 
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="add" />
            </div>
            <button class="add">
                <a asp-action="Index">Back to List</a>
            </button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function updateSliderValue(value) {
            document.getElementById('rating-value').textContent = value;
        }
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}